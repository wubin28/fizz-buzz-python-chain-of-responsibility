{"cyber-dojo.sh":"python -m pytest *test*.py\n","output":"============================= test session starts ==============================\nplatform linux2 -- Python 2.7.5 -- py-1.4.20 -- pytest-2.5.2\ncollected 4 items\n\ntest_fizz_buzz.py FFFF\n\n=================================== FAILURES ===================================\n_______ test_it_should_print_the_number_itself_if_it_is_a_normal_number ________\n\n    def test_it_should_print_the_number_itself_if_it_is_a_normal_number():\n        # arrange\n        fizzbuzz = fizz_buzz_kata.Fizzbuzz()\n    \n        # act & assert\n>       assert fizzbuzz.say(1) == \"1\"\n\ntest_fizz_buzz.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <fizz_buzz_kata.Fizzbuzz instance at 0x1365b90>, number = 1\n\n    def say(self, number):\n>       handlerBuzz = HandlerBuzz(handlerNormalNumber)\nE       NameError: global name 'handlerNormalNumber' is not defined\n\nfizz_buzz_kata.py:5: NameError\n_____________ test_it_should_print_Fizz_if_it_is_multiple_of_three _____________\n\n    def test_it_should_print_Fizz_if_it_is_multiple_of_three():\n        # arrange\n        fizzbuzz = fizz_buzz_kata.Fizzbuzz()\n    \n        # act & assert\n>       assert fizzbuzz.say(3) == \"Fizz\"\n\ntest_fizz_buzz.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <fizz_buzz_kata.Fizzbuzz instance at 0x1168c68>, number = 3\n\n    def say(self, number):\n>       handlerBuzz = HandlerBuzz(handlerNormalNumber)\nE       NameError: global name 'handlerNormalNumber' is not defined\n\nfizz_buzz_kata.py:5: NameError\n_____________ test_it_should_print_Buzz_if_it_is_multiple_of_five ______________\n\n    def test_it_should_print_Buzz_if_it_is_multiple_of_five():\n        # arrange\n        fizzbuzz = fizz_buzz_kata.Fizzbuzz()\n    \n        # act & assert\n>       assert fizzbuzz.say(5) == \"Buzz\"\n\ntest_fizz_buzz.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <fizz_buzz_kata.Fizzbuzz instance at 0x13704d0>, number = 5\n\n    def say(self, number):\n>       handlerBuzz = HandlerBuzz(handlerNormalNumber)\nE       NameError: global name 'handlerNormalNumber' is not defined\n\nfizz_buzz_kata.py:5: NameError\n____ test_it_should_print_FizzBuzz_if_it_is_multiple_of_both_three_and_five ____\n\n    def test_it_should_print_FizzBuzz_if_it_is_multiple_of_both_three_and_five():\n        # arrange\n        fizzbuzz = fizz_buzz_kata.Fizzbuzz()\n    \n        # act & assert\n>       assert fizzbuzz.say(15) == \"FizzBuzz\"\n\ntest_fizz_buzz.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <fizz_buzz_kata.Fizzbuzz instance at 0x1370f80>, number = 15\n\n    def say(self, number):\n>       handlerBuzz = HandlerBuzz(handlerNormalNumber)\nE       NameError: global name 'handlerNormalNumber' is not defined\n\nfizz_buzz_kata.py:5: NameError\n=========================== 4 failed in 0.04 seconds ===========================\n","instructions":"Write a program that prints the numbers from 1 to 100.\nBut for multiples of three print \"Fizz\" instead of the\nnumber and for the multiples of five print \"Buzz\". For\nnumbers which are multiples of both three and five\nprint \"FizzBuzz\".\n\nSample output:\n\n1\n2\nFizz\n4\nBuzz\nFizz\n7\n8\nFizz\nBuzz\n11\nFizz\n13\n14\nFizzBuzz\n16\n17\nFizz\n19\nBuzz\n... etc up to 100\n","test_fizz_buzz.py":"import fizz_buzz_kata\n\ndef test_it_should_print_the_number_itself_if_it_is_a_normal_number():\n    # arrange\n    fizzbuzz = fizz_buzz_kata.Fizzbuzz()\n\n    # act & assert\n    assert fizzbuzz.say(1) == \"1\"\n\ndef test_it_should_print_Fizz_if_it_is_multiple_of_three():\n    # arrange\n    fizzbuzz = fizz_buzz_kata.Fizzbuzz()\n\n    # act & assert\n    assert fizzbuzz.say(3) == \"Fizz\"\n\ndef test_it_should_print_Buzz_if_it_is_multiple_of_five():\n    # arrange\n    fizzbuzz = fizz_buzz_kata.Fizzbuzz()\n\n    # act & assert\n    assert fizzbuzz.say(5) == \"Buzz\"\n\ndef test_it_should_print_FizzBuzz_if_it_is_multiple_of_both_three_and_five():\n    # arrange\n    fizzbuzz = fizz_buzz_kata.Fizzbuzz()\n\n    # act & assert\n    assert fizzbuzz.say(15) == \"FizzBuzz\"\n\n","fizz_buzz_kata.py":"\nclass Fizzbuzz:\n\n    def say(self, number):\n        handlerBuzz = HandlerBuzz(handlerNormalNumber)\n        handlerFizz = HandlerFizz(handlerBuzz)\n        handlerFizzbuzz = HandlerFizzbuzz(handlerFizz)\n        result = handlerFizzbuzz.handle(number)\n\n        if number % 15 == 0:\n            return \"FizzBuzz\"\n        if number % 3 == 0:\n            return \"Fizz\"\n        if number % 5 == 0:\n            return \"Buzz\"\n\n        return str(number)\n\n\nclass Handler:\n\n    def __init__(self, successor = None):\n        self.__successor = successor\n\n\nclass HandlerFizzbuzz(Handler):\n\n    def handle(self, number):\n        if number % 15 == 0:\n            return \"FizzBuzz\"\n        super(HandlerFizzbuzz, self).__successor.handle(number)\n        \n\nclass HandlerFizz(Handler):\n\n    def handle(self, number):\n        if number % 3 == 0:\n            return \"Fizz\"\n        super(HandlerFizz, self).__successor.handle(number)\n        \nclass HandlerBuzz(Handler):\n\n    def handle(self, number):\n        if number % 5 == 0:\n            return \"Buzz\"\n        super(HandlerBuzz, self).__successor.handle(number)\n        \n\n"}